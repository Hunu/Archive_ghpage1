---
layout: "post"
title: "Machine Learning Crash Course 03"
date: "2020-01-31 12:56"
---

# Machine Learning Crash Course 03 - 简单尝试

1. TOC
{:toc}

## 从数据中学习

从数据中学习的方法有很多种，我们从一些简单的实例开始。

![mlcc0301](/images/2020/01/mlcc0301.png)

上图中为一个预测房屋价格的回归模型，其中：

- 房屋面积为特征
- 房屋价格为标签
- 斜线为模型
- 散点为样本
- y=wx+b中，w为权重（weight），b为bias
- 每一个样本与模型斜线的纵向距离为偏差。当样本位于斜线上方时，该样本为负偏差；位于下方为正偏差。

## 回归模型中的偏差

定义偏差的公式有很多种，这里从一个比较常见的开始：L2误差，又称方差。

这种偏差是通过计算预测值与实际值的差的平方得来。

由下图可见，预测值与实际值偏差越大。

下图为一个样本的L2误差

![mlcc02](/images/2020/01/mlcc02.png)

下图为一个数据集的L2误差计算方法

![mlcc03](/images/2020/01/mlcc03.png)

## 回归模型应用实例

很早以前人们发现，蟋蟀的鸣叫的频次与天气的冷热有关：天气越炎热时鸣叫越频繁。

作为给你的生日礼物，小明将他收集多年的蟋蟀鸣叫数据库送给了你，希望你能够从这份数据库中找出一些规律，并建立模型。

首先，我们通过散点图的形式观察数据集：

![ml03_01](/images/2020/02/ml03-01.png)

请你观察以下，蟋蟀每分钟鸣叫的次数，与天气温度是否存在线性关系？是的！你可以简单的画一条直线，使直线尽可能的符合散点图中所示的线性关系。

![ml03_02](/images/2020/02/ml03-02.png)

是的，直线并没有完美的经过每一个点，但是它已经尽可能再接近所有的点。我们可以用一个一元一次方程表示该直线。

$$ y = ax + b $$

其中，

- y是温度
- a是直线的斜率
- x是蟋蟀每分钟鸣叫的次数
- b是直线的纵向偏移

为了机器学习的方便，你需要稍微修改方程式的表达方式，用下面这个替代：

$$ y^{'} = b + w_1x_1 $$

至此，我们的模型建立完毕，如果需要推断当时的温度，只需要将当时蟋蟀鸣叫的次数带入上面这个公式，即可得到相应的温度值（y）。

尽管这个实例只用到了一个特征，但是实际的机器学习应用过程中，经常会同时用到多个特征，每个不同特征的权重用($$w_1, w_2, etc.$$)来表示。例如，一个拥有三个特征的机器学习模型应该像下面这个公式：

$$ y^{'} = b + w_1x_1 +w_2x_2 + w_3x_3 $$

## 进一步深入 - 训练与损失

简单来说，训练模型的含义是通过学习（确定）优质的样本，从而找出所有特征的权重及偏差的理想值。

在监督式机器学习中，机器学习算法通过这种方式建立模型：通过测试许多样本，并且尝试将模型的总体损失最小化，这一过程被称为经验风险最小化法。

损失是对糟糕预测的惩罚。也就是说，损失是针对衡量特定模型预测准确度的量化标准。

> 如果一个模型的预测是100%完美，那么损失为0；否则，损失将会是一个较大的数值。

训练模型的最终目标是要找出一组权重（weight）与偏差（bias）的最优值，使得该模型应用于所有样本上时的平均损失最小化。

同样的数据集，应用于不同的模型上之后，其损失是不同的。下图所示的同一组数据集中，左边的模型误差大，右边的模型误差小。

![ml03_04](/images/2020/02/ml03-04.png)

由上图我们可以直观的看出，左边的箭头线段明显长于右边相应的箭头线段。也就是说，右图所示模型能够给出更好的预测值。

你可能想知道能否通过创建一个数学方程（损失方程），从而以一种更加具有意义的方式来汇总所有个体的损失。

## 平方损失 - 一种常见的损失函数
